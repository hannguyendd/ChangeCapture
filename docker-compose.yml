services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672" # RabbitMQ default port
      - "15672:15672" # RabbitMQ management UI
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: ["postgres", "-c", "wal_level=logical"]

  debezium:
    image: debezium/server:2.7.3.Final
    container_name: debezium
    depends_on:
      - postgres
      - rabbitmq
    environment:
      # Debezium configuration
      - DEBEZIUM_SERVER_NAME=debezium-server
      - DEBEZIUM_SOURCE_OFFSET_STORAGE_FILE_FILENAME=/debezium/data/offsets.dat
      - DEBEZIUM_SOURCE_OFFSET_FLUSH_INTERVAL_MS=60000
      - DEBEZIUM_SOURCE_TOMBSTONES_ON_DELETE=false
      - QUAKUS_LOG_CONSOLE_JSON=false

      # Postgres source configuration
      - DEBEZIUM_SOURCE_CONNECTOR_CLASS=io.debezium.connector.postgresql.PostgresConnector
      - DEBEZIUM_SOURCE_PLUGIN_NAME=pgoutput
      - DEBEZIUM_SOURCE_DATABASE_HOSTNAME=postgres
      - DEBEZIUM_SOURCE_DATABASE_PORT=5432
      - DEBEZIUM_SOURCE_DATABASE_USER=postgres
      - DEBEZIUM_SOURCE_DATABASE_PASSWORD=password
      - DEBEZIUM_SOURCE_DATABASE_DBNAME=demo-product
      - DEBEZIUM_SOURCE_SCHEMA_INCLUDE_LIST=public
      - DEBEZIUM_SOURCE_TABLE_INCLUDE_LIST=public.Products
      - DEBEZIUM_SOURCE_TOPIC_PREFIX=commerce

      # RabbitMQ sink configuration
      - DEBEZIUM_SINK_TYPE=rabbitmq
      - DEBEZIUM_SINK_RABBITMQ_CONNECTION_HOST=rabbitmq
      - DEBEZIUM_SINK_RABBITMQ_CONNECTION_PORT=5672
      - DEBEZIUM_SINK_RABBITMQ_CONNECTION_USERNAME=user
      - DEBEZIUM_SINK_RABBITMQ_CONNECTION_PASSWORD=password
      - DEBEZIUM_SINK_RABBITMQ_EXCHANGE_NAME=product-changes

      # Transformations
      - DEBEZIUM_TRANSFORMS=unwrap,reroute
      - DEBEZIUM_TRANSFORMS_UNWRAP_TYPE=io.debezium.transforms.ExtractNewRecordState
      - DEBEZIUM_FORMAT_VALUE=json
      - DEBEZIUM_FORMAT_VALUE_SCHEMAS_ENABLE=false
      - DEBEZIUM_SOURCE_DECIMAL_HANDLING_MODE=string
      - DEBEZIUM_TRANSFORMS_REROUTE_TYPE=io.debezium.transforms.ByLogicalTableRouter
      - DEBEZIUM_TRANSFORMS_REROUTE_TOPIC_REGEX=(.*)\.public\.Products
      - DEBEZIUM_TRANSFORMS_REROUTE_TOPIC_REPLACEMENT=product-changes
      - DEBEZIUM_TRANSFORMS_REROUTE_KEY_REGEX=(.*)\.public\.Products
      - DEBEZIUM_TRANSFORMS_REROUTE_KEY_REPLACEMENT=product-changes

      # - BOOTSTRAP_SERVERS=rabbitmq:9092
      # - GROUP_ID=1
      # - CONFIG_STORAGE_TOPIC=my_connect_configs
      # - OFFSET_STORAGE_TOPIC=my_connect_offsets
      # - STATUS_STORAGE_TOPIC=my_connect_statuses
      # - CONNECTOR_NAME=debezium-connector
    ports:
      - "8083:8083"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:9.1.2
    container_name: kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"

volumes:
  postgres_data:
    name: compose-files_taggle-data

  rabbitmq_data:
    name: general-rabbitmq

  elasticsearch_data:
    name: "elasticsearch_data"
